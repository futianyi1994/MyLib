apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.android["androidJUnitRunner"]

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'VERSION_DATE', "\"${releaseTime()}\""
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'VERSION_DATE', "\"${releaseTime()}\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //自动追加版本号和版本名称
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                if (buildType.name == 'release') {
                    outputFileName = "MyLib" + "_v" + defaultConfig.versionName + "_" + releaseTime() + ".apk"
                }
            }
    }
}

//得到打包时间
def static releaseTime() {
    return new Date().format("yyyy-MM-dd")
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    implementation project(':mylib')
    //implementation rootProject.ext.dependencies["mylib"]

    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    //Smartrefreshlayout
    implementation rootProject.ext.dependencies["smartrefreshlayout"]
    //Bottom-navigation-bar
    implementation rootProject.ext.dependencies["bottom-navigation-bar"]
    //Rxbinding
    implementation rootProject.ext.dependencies["rxbinding"]
    //Rxrelay2
    implementation rootProject.ext.dependencies["rxrelay2"]
    //Banner
    implementation rootProject.ext.dependencies["banner"]
    //Glide
    implementation rootProject.ext.dependencies["glide"]
    //Multidex
    implementation rootProject.ext.dependencies["multidex"]
    //Utilcode
    implementation rootProject.ext.dependencies["utilcode"]
    //Autodispose
    implementation rootProject.ext.dependencies["autodispose-android-archcomponents"]
    //Room
    implementation rootProject.ext.dependencies["room"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    //Butterknife
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    //Lottie-Android
    implementation "com.airbnb.android:lottie:2.7.0"
}